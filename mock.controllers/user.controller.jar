import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

class User {
    private int id;
    private String username;
    private String email;
    private boolean isAdmin;

    public User(int id, String username, String email, boolean isAdmin) {
        this.id = id;
        this.username = username;
        this.email = email;
        this.isAdmin = isAdmin;
    }

    public int getId() {
        return id;
    }

    public String getUsername() {
        return username;
    }

    public String getEmail() {
        return email;
    }

    public boolean isAdmin() {
        return isAdmin;
    }
}

public class Main {
    // Mock user data
    private static List<User> mockUserListExampleJava = new ArrayList<>();

    static {
        mockUserListExampleJava.add(new User(1, "Alice", "alice@example.com", false));
        mockUserListExampleJava.add(new User(2, "Bob", "bob@example.com", true));
        mockUserListExampleJava.add(new User(3, "Charlie", "charlie@example.com", false));
        mockUserListExampleJava.add(new User(4, "Diana", "diana@example.com", true));
        mockUserListExampleJava.add(new User(5, "Evan", "evan@example.com", false));
        mockUserListExampleJava.add(new User(6, "Fiona", "fiona@example.com", true));
        mockUserListExampleJava.add(new User(7, "George", "george@example.com", false));
        mockUserListExampleJava.add(new User(8, "Hannah", "hannah@example.com", true));
        mockUserListExampleJava.add(new User(9, "Ian", "ian@example.com", false));
        mockUserListExampleJava.add(new User(10, "Jenna", "jenna@example.com", true));
    }

    // Function to fetch user data
    public static Optional<User> fetchUserDataExampleJava(int userId) {
        return mockUserListExampleJava.stream()
                .filter(user -> user.getId() == userId)
                .findFirst();
    }

    public static void main(String[] args) {
        // Usage example
        int userId = 1;
        Optional<User> user = fetchUserDataExampleJava(userId);
        if (user.isPresent()) {
            System.out.println("User data: " + user.get());
        } else {
            System.out.println("Error fetching user data: User not found");
        }
    }
}
